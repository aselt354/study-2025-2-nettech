---
## Author
author:
  name: Четвергова Мария Викторовна
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: kulyabov-ds@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Сетевые технологии"
subtitle: "Лабораторная работа №1"
license: "CC BY"
---

# Цель работы

 Изучение методов кодирования и модуляции сигналов с помощью высоко
уровнего языка программирования Octave.Определение спектра и параметров
 сигнала. Демонстрация принципов модуляции сигнала на примере аналоговой
 амплитудной модуляции.Исследование свойства самосинхронизации сигнала.

# Задание

1. Построение графиков в Octave
2. Разложение импульсного сигнала в частичный ряд Фурье
 3.  Определение спектра и параметров сигнала
 4. Амплитудная модуляция
 5.  Кодирование сигнала.Исследование  самосинхронизации сигнала


# Выполнение лабораторной работы

## 1. Построение графиков в Octave

 1. Запустите в вашей ОСOctave с оконныминтерфейсом.
 
   ![ Вход в программу](image/1.1.jpg){#fig-001 width=70%}
 
 2. Перейдите в окно редактора. Создайте новый сценарий. Сохраните его в ваш рабочий
 каталог с именем,например,plot_sin.m.
 
 ![ Создайте новый сценарий](image/1.2.jpg){#fig-002 width=70%}
    
    
 3. В окне редактора повторите следующий листинг по построению графика
 функции 
 
    ![ построение графика функции ](image/1.3.jpg){#fig-003 width=70%}

4. Запустите сценарий на выполнение (воспользуйтесьсоответствующим менюокна редактора или клавишейF5 ). В качестве результата выполнения кода должнооткрытьсяокноспостроеннымграфиком(рис.1.1)иввашемрабочем каталоге должны появиться файлы с графиками в форматах .eps,.png.

   ![ Результат](image/1.4.jpg){#fig-004 width=70%}
   

  ![ Результат](image/plot-sin.png){#fig-005 width=70%}


 5. Сохраните сценарий поддругим названием и измените еготак,чтобы на одном графике располагались отличающиеся по типу линий графики функций
      
      
   ![ Результат](image/1.5.jpg){#fig-006 width=70%}
   

    ![ Результат](image/1.6.jpg){#fig-007 width=70%}
   
  ![ Результат](image/plot-sin_2.png){#fig-008 width=70%}
  
 

## 2. Разложение импульсного сигнала в частичный ряд Фурье

 1. Создайтеновыйсценарийисохранитееговвашрабочийкаталогсименем,
 например,meandr.m.
 
  ![ новый сценарий](image/2.1.jpg){#fig-009 width=70%}
   
 
 2. Вкодесозданногосценариязадайтеначальныезначения:

  ![ новый сценарий](image/2.2.jpg){#fig-010 width=70%}
  
  3.  Разложение импульсного сигнала в форме меандра в частичный ряд Фурье  можнозадатьформулой. т.е. в спектре присутствуют только нечётные гармоники. Гармоники,образующие меандр,имеют амплитуду,обратно пропорциональную номеру соответствующей гармоники в спектре . Задаём массив значений гармоник массив элементов ряда.
  
    ![ записываем формулу](image/2.3.jpg){#fig-011 width=70%}
  
  4.  Далеедля построения в одномокнеотдельныхграфиков меандра с различным количествомгармоникреализуем суммирование ряда с накоплением  ивоспользуемся функциями subplot и plotдляпостроения графиков:
  
    ![ записываем формулу](image/2.4.jpg){#fig-012 width=70%}
    
 5. Экспорт файлов в формат png
 
     ![ Экспорт файлов](image/2.5.jpg){#fig-013 width=70%}
     
         ![ графики](image/meandr.png){#fig-014 width=70%}
     
 6.  Скорректируйте коддля реализации меандра через синусы.Получите сооветствующие графики.
 
![ Вывод графиков](image/2.6.jpg){#fig-015 width=70%}
     
 ![ графики](image/meandr2.png){#fig-016 width=70%}

## 3.  Определение спектра и параметров сигнала

 1. Ввашемрабочемкаталоге создайте каталогspectre1 и в нём новый сцена
рий сименем,spectre.m.

![создание раб пространства](image/3.1.jpg){#fig-017 width=70%}

 2. Вкодесозданного сценария задайте начальные значения:

![ввод скрипта](image/3.2.jpg){#fig-018 width=70%}

 3. Далее вкоде задайтедва синусоидальных сигнала разной частоты:
 
 ![два синусоидальных сигнала разной частоты](image/3.3.jpg){#fig-019 width=70%}
 
 4. Постройте графики сигналов 

![построение графиков сигналов](image/3.4.jpg){#fig-020 width=70%}


5. СпомощьюбыстрогопреобразованияФурьенайдитеспектрысигналов, добавив в файл spectre.m следующийкод
 
 ![изменение скрипта](image/3.5.jpg){#fig-021 width=70%}
 
 6. Учитывая реализацию преобразования Фурье,скорректируйте график спектра: отбросьте дублирующие отрицательные частоты,атакже примите врасчётто,что на каждом шаге вычисления быстрого преобразования Фурье происходит суммирование амплитуд сигналов. Для этого добавьте в файлspectre.mследующийкод:
 
 ![построение графиков сигналов](image/3.6.jpg){#fig-022 width=70%}
 
 7.  Найдите спектр суммы рассмотренных сигналов ,создав каталог spectr_sum ифайлвнёмspectre_sum.mсоследующимкодом:

![скрипт файла](image/3.7.jpg){#fig-023 width=70%}

В результатедолженполучитсяаналогичныйпредыдущемурезультат,
 т.е. спектр суммы сигналов должен бытьравен сумме спектров сигналов,что
 вытекает из свойств преобразования Фурье. 
 
 ![построение графиков сигналов](image/spectre_sum.png){#fig-024 width=70%}

 
## 4. Амплитудная модуляция

 1. Ввашемрабочемкаталоге создайте каталогmodulation и в нём новый сце
нарий с именем am.m.

![каталог modulation](image/4.1.jpg){#fig-025 width=70%}

 2. Добавьте в файле am.m следующийкод:

![скрипт файла](image/4.2.jpg){#fig-026 width=70%}

![построение графиков спектра ](image/am.png){#fig-027 width=70%}

![построение графиков сигнала ](image/am2.png){#fig-028 width=70%}


## 5.  Кодирование сигнала.Исследование  самосинхронизации сигнала

 1. Ввашемрабочемкаталоге создайте каталогcoding и в нём файлы
 
  ![создание топологии](image/5.1.jpg){#fig-029 width=70%}
 
 2. В окне интерпретатора команд проверьте,установленли у вас пакетрасши
рений signal:

  ![пакет расширений signal:](image/5.2.jpg){#fig-030 width=70%}


 3. Вфайле main.m подключите пакетsignal и задайте входные кодовые по
следовательности:


  ![подключите пакет signal](image/5.3.jpg){#fig-031 width=70%}


 4. Вфайле maptowave.m пропишитефункцию,котораяповходномубитовому
 потоку строитграфик сигнала:
 
   ![написание скрипта файла](image/5.4.jpg){#fig-032 width=70%}
 
 
  5. Вфайлахunipolar.m,ami.m,bipolarnrz.m,bipolarrz.m,manchester.m, diffmanc.m пропишите соответствующие функции преобразования кодовой  последовательности data с вызовом функции maptowave для построения соответствующего графика.
 
   ![написание функции кодирования](image/5.5.1.jpg){#fig-033 width=70%}
   
   ![написание функции кодирования](image/5.5.2.jpg){#fig-034 width=70%}
   
   ![написание функции кодирования](image/5.5.3.jpg){#fig-035 width=70%}
   
    ![написание функции кодирования](image/5.5.4.jpg){#fig-036 width=70%} 
   
    ![написание функции кодирования](image/5.5.5.jpg){#fig-037 width=70%}
   
    ![написание функции кодирования](image/5.5.6.jpg){#fig-038 width=70%}
    
  6. Вфайле calcspectre.m пропишите функцию построения спектра сигнала:
 
    ![пнаписание функции кодирования](image/5.5.6.jpg){#fig-038 width=70%}
 
  7. Запуститеглавныйскриптmain.m.Вкаталогеsignalдолжныбытьполучены файлы с графиками кодированного сигнала
 
   ![ Результат](image/ami.png){#fig-039 width=70%}
   
   ![ Результат](image/bipolarnrz.png){#fig-040 width=70%}
   
    ![ Результат](image/bipolarrz.png){#fig-041 width=70%}
    
    ![ Результат](image/diffmanc.png){#fig-042 width=70%} 
    
    ![ Результат](image/manchester.png){#fig-043 width=70%}
    
    ![ Результат](image/unipolar.png){#fig-044 width=70%}  
 
 
 в каталоге spectre—файлы с графиками спектров сигналов
 
    ![ Результат](image/ami2.png){#fig-045 width=70%}
   
   ![ Результат](image/bipolarnrz2.png){#fig-046 width=70%}
   
    ![ Результат](image/bipolarrz2.png){#fig-047 width=70%}
    
    ![ Результат](image/diffmanc2.png){#fig-048 width=70%} 
    
    ![ Результат](image/manchester2.png){#fig-049 width=70%}
    
    ![ Результат](image/unipolar2.png){#fig-050 width=70%} 
    
    
    
 в каталоге sync  —файлы с графиками, иллюстрирующими свойства самосинхронизации   
 
    ![ Результат](image/ami3.png){#fig-051 width=70%}
   
   ![ Результат](image/bipolarnrz3.png){#fig-052 width=70%}
   
    ![ Результат](image/bipolarrz3.png){#fig-053 width=70%}
    
    ![ Результат](image/diffmanc3.png){#fig-054 width=70%} 
    
    ![ Результат](image/manchester3.png){#fig-055 width=70%}
    
    ![ Результат](image/unipolar3.png){#fig-056 width=70%}  
 
 
# Выводы

В ходе выполнения лабораторной работы №1 были построены графики в программе Octave и прокомментированы результаты работы в программе, составлены изображения.


# Список литературы{.unnumbered}

1.  Barr D. Common DNS Operational and Configuration Errors: RFC / RFC Editor. —02/1996. — DOI: 10.17487/rfc1912.
2.  Security-Enhanced Linux. Linux с улучшенной безопасностью: руководство пользователя / M. McAllister, S. Radvan, D. Walsh, D. Grift, E. Paris, J. Morris. — URL: https://docs-old.fedoraproject.org/ru-RU/Fedora/13/html/Security-Enhanced_Linux/index.html (дата обр.13.09.2021).
3. Systemd. — 2015. — URL: https:/ /wiki .archlinux .org /index .php /Systemd (visited on 09/13/2021).
4. Костромин В. А. Утилита lsof — инструмент администратора. — URL: http : / / rus linux.net/kos.php?name=/papers/lsof/lsof.html (дата обр. 13.09.2021).
5. Поттеринг Л. Systemd для администраторов: цикл статей. — 2010. — URL: http : wiki.opennet.ru/Systemd (дата обр. 13.09.2021).
6. Сайт проекта NetworkManager. — URL: https : / / wiki . gnome . org / Projects /
NetworkManager (visited on 09/13/2021).
7. Сайт проекта nmcli. — URL: https://developer.gnome.org/NetworkManager/stable/
nmcli.html (visited on 09/13/2021).
